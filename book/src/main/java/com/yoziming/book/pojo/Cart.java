package com.yoziming.book.pojo;

import java.math.BigDecimal;
import java.util.*;

public class Cart {
    // private int totalCount;
    // private BigDecimal totalPrice;
    /**
     * key是商品編號，value是商品訊息
     */
    private Map<Integer, CartItem> items = new LinkedHashMap<>();

    public Cart() {

    }

    public Cart(Map<Integer, CartItem> items) {
        this.items = items;
    }

    /**
     * 添加商品到購物車
     *
     * @param cartItem
     */
    public void addItem(CartItem cartItem) {
        // 先看車裡是否已有該商品
        CartItem item = items.get(cartItem.getId());
        if (item == null) {
            // 新入車商品
            items.put(cartItem.getId(), cartItem);
        } else {
            // 如果商品已經在車裡，就添加數量
            item.setCount(item.getCount() + 1);
            // 同時更新總價
            item.setTotalPrice(item.getPrice().multiply(new BigDecimal(item.getCount())));
        }
    }

    /**
     * 刪除商品
     *
     * @param id
     */
    public void deleteItem(int id) {
        items.remove(id);
    }

    /**
     * 清空購物車
     */
    public void clear() {
        items.clear();
    }

    /**
     * 修改商品數量
     */
    public void updateCount(int id, int count) {
        // 先看車裡是否已有該商品
        CartItem item = items.get(id);
        if (item != null) {
            // 商品已經在車裡，改數量
            item.setCount(count);
            // 同時更新總價
            item.setTotalPrice(item.getPrice().multiply(new BigDecimal(item.getCount())));
        }
    }

    // region Constructor, getters, setters, equals, hashCode, toString -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    // region Getters and setters -- generated by BoB the Builder of Beans
    public int getTotalCount() {
        int totalCount = 0;
        // 把車上的商品都遍歷求總數
        for (CartItem cartItem : items.values()) {
            totalCount += cartItem.getCount();
        }
        return totalCount;
    }

    public BigDecimal getTotalPrice() {
        BigDecimal totalPrice = new BigDecimal(0);
        // 把車上的商品都遍歷求總價格
        for (CartItem cartItem : items.values()) {
            totalPrice = totalPrice.add(cartItem.getTotalPrice());
        }

        return totalPrice;
    }

    public Map<Integer, CartItem> getItems() {
        return items;
    }

    public void setItems(Map<Integer, CartItem> items) {
        this.items = new HashMap<>(Objects.requireNonNull(items));
    }// endregion Getters and setters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Cart that = (Cart) o;

        return Objects.equals(this.getTotalCount(), that.getTotalCount()) && Objects.equals(this.getTotalPrice(),
                that.getTotalPrice()) && Objects.equals(this.getItems(), that.getItems());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getTotalCount(), getTotalPrice(), getItems());
    }// endregion hashCode() and equals()

    // region toString() -- generated by BoB the Builder of Beans
    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "{", "}")
                .add("totalCount=" + getTotalCount())
                .add("totalPrice=" + getTotalPrice())
                .add("items=" + getItems())
                .toString();
    }// endregion toString()
    // endregion Constructor, getters, setters, equals, hashCode, toString
}
